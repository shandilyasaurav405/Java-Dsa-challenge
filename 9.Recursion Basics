Q1) Print number in decreasing order (n to 1).

public static void printDec(int n){
        if(n==1){
            System.out.println(n);
            return;
        }

        System.out.print(n+" ");
        printDec(n-1);
    }



    public static void main(String[] args) {
       int n = 10;
       printDec(n);
    }


Q2)Print number in increasing order (1 to n).

 public static void printinc(int n){
        if(n==1){
            System.out.print(n+" ");
            return;
        }
       printinc(n-1);
        System.out.print(n+" ");
    }



    public static void main(String[] args) {
       int n = 10;
       printinc(n);
    }

Q3) sum of number from 1to n.

 public static int calcSum(int n){
        if(n==1){
            return 1;
        }
        int Snm1 = calcSum(n-1);
        int sumn= n+Snm1;
        return sumn;
    }


    public static void main(String[] args) {
       int n = 3;
        System.out.println(calcSum(3));
    }


Q4) Find factorial of a number?

public static int calcFact(int n){
        if(n==0){
            return 1;
        }
        int fnm1 = calcFact(n-1);
        int fn= n*fnm1;
        return fn;
    }


    public static void main(String[] args) {
       int n = 5;
        System.out.println(calcFact(5));
    }


Q5) print Nth fibonacci number .


public static int fib(int n){
        if (n==0 || n== 1){
            return n;
        }
        int f1 = fib(n-1);
        int f2 = fib(n-2);
        int fn = fib(n-1)+fib(n-2);
        return fn;
    }


    public static void main(String[] args) {
       int n = 10;
        System.out.println(fib(n));

    }


Q6) Check if the array is sorted or not.


 public static boolean isSorted(int arr[], int i){
       if(i ==arr.length-1){
           return true;
       }
       if(arr[i] > arr[i+1]){
           return false;
       }
       return isSorted(arr,i+1);
   }
  public static void main(String[] args) {
      int arr[]= {1,2,3, 7,4,5};
        System.out.println(isSorted(arr, 0));


    }



Q7) Write  a function to find the firs occurance of a number in a array.

public static int firstOccurance(int arr[],int key, int i){
           //base case
           if(i== arr.length){
               return -1;
           }
           if(arr[i]==key){
               return i;
           }
           return firstOccurance(arr, key,i+1);
       }
    public static void main(String[] args) {
      int arr[]= {1,2,4, 7,4,5};
      int key = 4;
        System.out.println(firstOccurance(arr,key,0));
    }

Q8)Print xto the power n. (Brute Force)

 public static int power(int x, int n){
          //base case
          if(n==0){
              return 1;
          }
          int xnm1 = power(x,n-1);
          int xn = x * xnm1;
          return xn;
      }
    public static void main(String[] args) {
        System.out.println(power(2,10 ));
    }

  
