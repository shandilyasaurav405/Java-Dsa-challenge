Q1) Print the following pattern
*****
*   *
*   *
*****
public static void hollow_Rect(int totRows, int totCols){
      //outer loop
      for (int i = 1;i<=totRows;i++){
         //inner-columns
          for (int j =1; j<=totCols;j++){
              //cell -(i,j)
              if (i ==1|| i ==totRows || j == 1 || j ==totCols){
                  //boundary cells
                  System.out.print("*");
              }else{
                  System.out.print(" ");
              }
          }
          System.out.println();
      }
  }

    public static void main(String[] args) {
           hollow_Rect(4,5);

    }

Q2) Print inverted half pyramid
   *
  **
 ***
****


 public static void invHalfPyramid(int n){
      //outer loop for lines
      for (int i =1; i<=n;i++){
          //loop for spaces
          for (int j = 1; j<= n-i;j++){
              System.out.print(" ");
          }
          //loop for stars
          for (int j = 1; j<=i;j++){
              System.out.print("*");
          }
          System.out.println();
      }
  }

    public static void main(String[] args) {
          Scanner sc = new Scanner(System.in);
        System.out.println("Enter no. of lines : ");
        int n = sc.nextInt();
        invHalfPyramid(n);
    }

Q3) Print inverted Half pyramid with numbers
 1 2 3 4 5 
 1 2 3 4 
 1 2 3 
 1 2 
 1 

 public static void invHalfPyramidWithNum(int n){
      //outer loop for lines
      for (int i =1; i<=n;i++){
           //loop for numbers
          for (int j = 1; j<= n-i+1;j++){
              System.out.print(j + " ");
          }
          System.out.println();
      }

  }

    public static void main(String[] args) {
          Scanner sc = new Scanner(System.in);
        System.out.println("Enter no. of lines : ");
        int n = sc.nextInt();
        invHalfPyramidWithNum(n);
    }
 

Q4) FLOYD's Triangle
 1 
 2 3 
 4 5 6 
 7 8 9 10 
 11 12 13 14 15

public static void FloydsTriangle(int n){
      int counter = 1;
      //outer loop for lines
      for (int i =1; i<=n;i++){
           //loop for printing counter
          for (int j = 1; j<=i;j++){
              System.out.print(counter + " ");
              counter++;
          }
          System.out.println();
      }

  }

    public static void main(String[] args) {
          Scanner sc = new Scanner(System.in);
        System.out.println("Enter no. of lines : ");
        int n = sc.nextInt();
        FloydsTriangle(n);
    }


Q5)0-1 triangle
 1
 01
 101
 0101
 10101


  public static void Zero_one_Triangle(int n){

      //outer loop for lines/rows
      for (int i =1; i<=n;i++){
           //loop for  no. of numbers
          for (int j = 1; j<=i;j++){
              if ((i+j)% 2 == 0){ //sum of cell is even
                  System.out.print("1");

              }else{
                  System.out.print("0");
              }

          }
          System.out.println();
      }

  }

    public static void main(String[] args) {
          Scanner sc = new Scanner(System.in);
        System.out.println("Enter no. of lines : ");
        int n = sc.nextInt();
       Zero_one_Triangle(n);
    }


Q6) butterfly pattern

 *        *
 **      **
 ***    ***
 ****  ****
 **********
 **********
 ****  ****
 ***    ***
 **      **
 *        *



 public static void butterfly(int n){
     //first half
      for (int i =1; i<=n;i++){
      //stars -i
          for (int j = 1; j<=i;j++){
              System.out.print("*");
          }
      // spaces -2*(n-i)
          for (int j =1; j<=2*(n-i); j++){
              System.out.print(" ");
          }
       //stars - i
          for (int j = 1; j<= i; j++){
              System.out.print("*");
          }
          System.out.println();

      }

      //2nd half
      for (int i = n; i>=1; i--){
          for (int j = 1; j<=i;j++){
              System.out.print("*");
          }
          // spaces -2*(n-i)
          for (int j =1; j<=2*(n-i); j++){
              System.out.print(" ");
          }
          //stars - i
          for (int j = 1; j<= i; j++){
              System.out.print("*");
          }
          System.out.println();
      }

  }

    public static void main(String[] args) {
          Scanner sc = new Scanner(System.in);
        System.out.println("Enter no. of lines : ");
        int n = sc.nextInt();
       butterfly(n);
    }



    
