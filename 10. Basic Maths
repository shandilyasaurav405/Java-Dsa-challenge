Q1) Check a number is Armstrong or not.



	public static void main(String[] args) {
		// Write your code here
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int dup = n;
		int sum = 0;
		while(n>0){
			int last_digit = n%10;
			sum = sum+(last_digit*last_digit*last_digit);
			n =n/10;
		}
		if(sum == dup){
			System.out.println("true");
		}
		else{
			System.out.println("false");
		}
		
		}


 Q2) Reverse bits.


public static void swap(int i, int j, int arr[]) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
		return;
	}

	public static long reverseBits(long n) {
		int[] bits = new int[32];

		// Preparing the bits array.
		for (int i = 0; i < 32; i++) {

			// If the ith bit is set.
			if ((n & (long) 1 << i) > 0) {
				bits[i] = 1;
			}
		}
		for (int i = 0; i < 16; i++) {

			// Swapping the left and rightmost bits.
			swap(i, 31 - i, bits);
		}

		// 'ans' will store the value for the reversed bits representation.
		long ans = 0;

		for (int i = 0; i < 32; i++) {

			// If the i'th bit is set.
			if (bits[i] == 1) {
				ans += (long) 1 << i;
			}
		}
		return ans;

	}


Q3) Check a number is Palindrome number or not.


public static void main(String[] args) {
		Scanner sc = new Scanner (System.in);
		int n = sc. nextInt();
		int reverse = 0;
		int dup = n;
		while(n>0){
			int lastDigit = n%10;
			 n = n / 10;
			 reverse = (reverse*10) + lastDigit;
		}
		if(dup == reverse){
			System.out.println("true");
		}
		else{
			System.out.println("false");
		}
		
	}

Q4)  Print all Divisors of a number.

 public static List< Integer > printDivisors(int n) {
        List< Integer > ans = new ArrayList<>();

        // Traversing from 1 to 'N'.
        for (int i = 1; i <= n; i++)
        {
            if (n % i == 0)
            {
                ans.add(i);
            }
        }
        return ans;
    }


Q5)  Sum of all divisors.


public static int sumOfAllDivisors(int n){
        int ans = 0;

        
        for (int i = 1; i <= n; i++)
        {
            ans += i * (n / i);
        }

        return ans;
    }
Q6) GCD/HCF of a number .

public static int gcd(int a,int b)
	{
		// Write your code here
		for(int i = Math.min(a,b); i >=1;i--){
			if((a%i ==0) && (b%i == 0)){
				return i;
			}
		}
		return -1;
	}		
